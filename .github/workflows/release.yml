name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up Go
        uses: actions/setup-go@v5.1.0
        with:
          go-version: 1.22.1

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y gcc libgl1-mesa-dev xorg-dev xz-utils

      - name: Install Fyne
        run: go install fyne.io/fyne/v2/cmd/fyne@latest

      - name: Download Icon
        run: curl -o flxvwr.png https://i.ibb.co/RNpWkb6/flxvwr.png

      - name: Build Go Application
        run: |
          mkdir -p build
          GOOS=linux GOARCH=amd64 fyne package -os linux -name flxvwr -icon flxvwr.png

      - name: Extract .tar.xz package
        run: |
          mkdir -p build/extracted
          tar -xf flxvwr.tar.xz -C build/extracted

      - name: Modify .desktop file
        run: |
          DESKTOP_FILE="build/extracted/usr/local/share/applications/flxvwr.desktop"
          echo "" >> $DESKTOP_FILE
          echo "Version=1.0" >> $DESKTOP_FILE
          echo "Comment=simple, flexible, image viewer" >> $DESKTOP_FILE
          echo "Categories=Utility;Application;" >> $DESKTOP_FILE
          echo "Terminal=false" >> $DESKTOP_FILE
          echo "StartupWMClass=flxvwr" >> $DESKTOP_FILE

      - name: Repackage into a .tar.xz archive
        run: |
          cd build/extracted
          tar -cJf ../flxvwr-x64-${{ github.ref_name }}.tar.xz .
          cd ..

  build-darwin-arm:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Set up Go
        uses: actions/setup-go@v5.1.0
        with:
          go-version: 1.22.1

      - name: Install fyne
        run: go install fyne.io/fyne/v2/cmd/fyne@latest

      - name: Download Icon
        run: curl -o icon.png https://i.ibb.co/RNpWkb6/flxvwr.png

      - name: Build for darwin (Apple Silicon)
        run: |
          mkdir -p build/arm64
          GOARCH=arm64 fyne package -os darwin -icon icon.png -name flxvwr
          mv flxvwr.app build/arm64/flxvwr.app

      - name: Ad-Hoc Code Signing for arm64
        run: |
          codesign --sign - --force --deep build/arm64/flxvwr.app

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Create DMG for arm64
        run: |
          create-dmg \
            --volname "flxvwr Installer (arm64)" \
            --window-pos 200 120 \
            --window-size 600 400 \
            --icon-size 100 \
            --app-drop-link 400 150 \
            "build/arm64/flxvwr-arm64-${{ github.ref_name }}.dmg" \
            "build/arm64/flxvwr.app" \

  build-darwin-x64:
    runs-on: macos-13
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Set up Go
        uses: actions/setup-go@v5.1.0
        with:
          go-version: 1.22.1

      - name: Install Fyne
        run: go install fyne.io/fyne/v2/cmd/fyne@latest

      - name: Download Icon
        run: curl -o icon.png https://i.ibb.co/RNpWkb6/flxvwr.png

      - name: Build for darwin (Intel)
        run: |
          mkdir -p build/x64
          GOARCH=amd64 fyne package -os darwin -icon icon.png -name flxvwr
          mv flxvwr.app build/x64/flxvwr.app

      - name: Ad-Hoc Code Signing for x64
        run: |
          codesign --sign - --force --deep build/x64/flxvwr.app

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Create DMG for x64
        run: |
          create-dmg \
            --volname "flxvwr Installer (x64)" \
            --window-pos 200 120 \
            --window-size 600 400 \
            --icon-size 100 \
            --app-drop-link 400 150 \
            "build/x64/flxvwr-x64-${{ github.ref_name }}.dmg" \
            "build/x64/flxvwr.app" \

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
  
      - name: Set up Go
        uses: actions/setup-go@v5.1.0
        with:
          go-version: 1.22.1
  
      - name: Install fyne
        run: go install fyne.io/fyne/v2/cmd/fyne@latest
  
      - name: Download Icon
        run: curl -o icon.png https://i.ibb.co/RNpWkb6/flxvwr.png
  
      - name: Install ImageMagick
        run: choco install imagemagick -y
  
      - name: Resize and Convert Icon to ICO
        run: magick icon.png -resize 256x256 icon.ico
  
      - name: Build for Windows
        run: |
          mkdir -p build/windows
          fyne package -os windows -icon icon.ico -name flxvwr
          mv flxvwr.exe build/windows/flxvwr.exe
  
      - name: Install Inno Setup
        run: |
          curl -L -o is.exe https://jrsoftware.org/download.php/is.exe
          ./is.exe /VERYSILENT /SUPPRESSMSGBOXES /NORESTART /SP-
  
      - name: Add Inno Setup to PATH
        shell: bash
        run: echo "C:\\Program Files (x86)\\Inno Setup 6" >> $GITHUB_PATH
  
      - name: Generate Inno Setup Script
        run: |
          Write-Output "[Setup]" | Out-File -FilePath flxvwr.iss -Encoding UTF8
          Add-Content -Path flxvwr.iss -Value "AppName=flxvwr"
          Add-Content -Path flxvwr.iss -Value "AppVersion=1.0"
          Add-Content -Path flxvwr.iss -Value "DefaultDirName={autopf}\flxvwr"
          Add-Content -Path flxvwr.iss -Value "DefaultGroupName=flxvwr"
          Add-Content -Path flxvwr.iss -Value "OutputDir=build/windows"
          Add-Content -Path flxvwr.iss -Value "OutputBaseFilename=flxvwr_installer"
          Add-Content -Path flxvwr.iss -Value "SetupIconFile=icon.ico"
          Add-Content -Path flxvwr.iss -Value "[Files]"
          Add-Content -Path flxvwr.iss -Value 'Source: "build/windows/flxvwr.exe"; DestDir: "{app}"; Flags: ignoreversion'
          Add-Content -Path flxvwr.iss -Value "[Icons]"
          Add-Content -Path flxvwr.iss -Value 'Name: "{group}\flxvwr"; Filename: "{app}\flxvwr.exe"'
          Add-Content -Path flxvwr.iss -Value 'Name: "{commondesktop}\flxvwr"; Filename: "{app}\flxvwr.exe"; Tasks: desktopicon'
          Add-Content -Path flxvwr.iss -Value "[Tasks]"
          Add-Content -Path flxvwr.iss -Value 'Name: "desktopicon"; Description: "Create a &Desktop shortcut"; GroupDescription: "Additional icons:"'
  
      - name: Build Windows Installer
        run: ISCC.exe flxvwr.iss

      - name: Rename Installer
        run: mv build/windows/flxvwr_installer.exe build/windows/flxvwr_installer-${{ github.ref_name }}.exe
  
  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-darwin, build-windows]
    steps:
      - name: Upload assets
        uses: softprops/action-gh-release@vv2.0.9
        with:
          make_latest: true
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
              build/flxvwr-x64-${{ github.ref_name }}.tar.gz
              build/arm64/flxvwr-arm64-${{ github.ref_name }}.dmg
              build/x64/flxvwr-x64-${{ github.ref_name }}.dmg
              build/windows/flxvwr_installer.exe
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
